// Code generated by ifacemaker. DO NOT EDIT.

package search

import (
	"github.com/RTradeLtd/Lens/models"
	"github.com/RTradeLtd/rtfs"
	"github.com/ipfs/go-datastore/query"
)

// Searcher provides the internal Lens search API
type Searcher interface {
	// Close shuts down the service datastore
	Close() error
	// GetEntries is used to get all known entries
	GetEntries() ([]query.Entry, error)
	// MigrateEntries is used to migrate entries to newer object types
	MigrateEntries(entries []query.Entry, im *rtfs.IpfsManager, migrateContent bool) error
	// Put is used to store something in badgerds
	Put(keyName string, data []byte) error
	// Get is used to retrieve something from badgerds by key name
	Get(keyName string) ([]byte, error)
	// Has is used to check if our database has a key matching this name
	Has(keyName string) (bool, error)
	// KeywordSearch retrieves a slice of content hashes that were indexed with these keywords
	KeywordSearch(keywords []string) ([]models.ObjectV1, error)
	// AdvancedSearch is used to perform an advanced search against the lens index
	AdvancedSearch(opts *FilterOpts) ([]models.ObjectV1, error)
}
